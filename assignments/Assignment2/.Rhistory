#
mlefit = bn.fit(dag,data,method = "bayes")
summary(data)
table(data$sex)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data[] <- lapply(data, function(x) factor(x, levels = unique(x)))
data
dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
# ("[m][f][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
# Using maximum likelihood.
#
mlefit = bn.fit(dag,data,method = "bayes")
# Install if needed: install.packages("gmodels")
library(gmodels)
install.packages("gmodels")
# Install if needed: install.packages("gmodels")
library(gmodels)
CrossTable(data$injury, data$sex, prop.chisq = FALSE)
#dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
dag <- model2network("[sex][agegrp3][yrs_experience]")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
# ("[m][f][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
#dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
dag <- model2network("[sex][agegrp3][yrs_experience|sex:agegrp3")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
#dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
dag <- model2network("[sex][agegrp3][yrs_experience|sex:agegrp3]")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
# ("[m][f][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data[] <- lapply(data, function(x) factor(x, levels = unique(x)))
data
#dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
dag <- model2network("[sex][agegrp3][yrs_experience|sex:agegrp3]")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
# ("[m][f][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
# Using maximum likelihood.
#
mlefit = bn.fit(dag,data,method = "bayes")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data[] <- lapply(data, function(x) factor(x, levels = unique(x)))
data
#dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
dag <- model2network("[agegrp3][yrs_experience|agegrp3]")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
# ("[m][f][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
# Using maximum likelihood.
#
mlefit = bn.fit(dag,data,method = "bayes")
asia
sapply(asia, class)
# Should return "factor" or "character" for each column
data
str(asia)
str(data)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data <- as.data.frame(data)
data
#dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
dag <- model2network("[sex][agegrp3][yrs_experience|sex:")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data <- as.data.frame(data)
data
setwd("~/Documents/GitHub/uc3m_graphical_and_hidden_markov_models/assignments/Assignment2")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data <- as.data.frame(data)
data
dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
#dag <- model2network("[sex][agegrp3][yrs_experience|sex:")#[train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
# ("[m][f][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
# Using maximum likelihood.
#
mlefit = bn.fit(dag,data,method = "bayes")
mlefit
mlefit$E
# Install if needed: install.packages("gmodels")
library(gmodels)
CrossTable(data$injury, data$sex, prop.chisq = FALSE)
#
# Bayesian approach / Laplacian smoothing
#
bayesfit <- bn.fit(dag,asia,method="bayes")
bayesfit
bayesfit$E
#
# Data
#
data(asia)
dim(asia)
head(asia)
#
# Graphical representation
#
dag <- model2network("[A][S][T|A][L|S][B|S][D|B:E][E|T:L][X|E]")
graphviz.plot(dag)
# plot(dag) could also be used.
#
# Defining probabilities via expert judgements
#
yn <- c("yes", "no")
cptA <- matrix(c(0.01, 0.99), ncol=2, dimnames=list(NULL, yn))
cptS <- matrix(c(0.5, 0.5), ncol=2, dimnames=list(NULL, yn))
cptT <- matrix(c(0.05, 0.95, 0.01, 0.99), ncol=2, dimnames=list("T"=yn, "A"=yn))
cptL <- matrix(c(0.1, 0.9, 0.01, 0.99), ncol=2, dimnames=list("L"=yn, "S"=yn))
cptB <- matrix(c(0.6, 0.4, 0.3, 0.7), ncol=2, dimnames=list("B"=yn, "S"=yn))
cptX <- matrix(c(0.98, 0.02, 0.05, 0.95), ncol=2, dimnames=list("X"=yn, "E"=yn))
# cptE and cptD are 3-d matrices, which don't exist in R, so
# we need to build these manually as below.
cptE <- c(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)
dim(cptE) <- c(2, 2, 2)
dimnames(cptE) <- list("E"=yn, "L"=yn, "T"=yn)
cptD <- c(0.9, 0.1, 0.7, 0.3, 0.8, 0.2, 0.1, 0.9)
dim(cptD) <- c(2, 2, 2)
dimnames(cptD) <- list("D"=yn, "E"=yn, "B"=yn)
expertfit <- custom.fit(dag, dist=list(A=cptA, S=cptS, T=cptT, L=cptL,
B=cptB, E=cptE, X=cptX, D=cptD))
expertfit
#
# Using maximum likelihood.
#
mlefit = bn.fit(dag,asia)
mlefit
mlefit$E
#
# Bayesian approach / Laplacian smoothing
#
bayesfit <- bn.fit(dag,asia,method="bayes")
bayesfit
bayesfit$E
#
# Prediction
#
v <- mlefit$T  # Try this with bayesfit or expertfit instead.
pTgivenA <- v$prob
v <- mlefit$A
pA <- v$prob
pT <- unname(pTgivenA[2,1]*pA[1]+pTgivenA[2,2]*pA[2])
pT
v
#
# Prediction
#
v <- mlefit$T  # Try this with bayesfit or expertfit instead.
pTgivenA <- v$prob
v <- mlefit$A
pA <- v$prob
pT <- unname(pTgivenA[2,1]*pA[1]+pTgivenA[2,2]*pA[2])
pT
#
# Exact prediction: moralization.
#
mlefit_gr <- as.grain(mlefit)
mg <- moralize(mlefit_gr$dag)
plot(mg)
#
# Triangulation.
#
plot(triangulate(mg))
#
# Prediction
#
mlefit_gr <- compile(mlefit_gr)
mlefit_gr <- propagate(mlefit_gr)
querygrain(mlefit_gr,nodes="T",type="marginal")
#
# A more complicated prediction.
#
mlefit_gr_ev <- setFinding(mlefit_gr,nodes=c("D","X"),states=c("yes","yes"))
querygrain(mlefit_gr_ev,nodes="L",type="marginal")
#
# Approximate prediction.
#
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"), =100)
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"),n=1000)
#
# Approximate prediction.
#
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"), n=100)
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"),n=1000)
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"),n=10000)
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"),n=100000)
cpquery(mlefit, (L=="yes"), (D=="yes" & X=="yes"),n=1000000)
# predict
cpquery(mlefit, (injury=="1"), (sex=="yes" & =="m" & agegrp3=="60+" & yrs_experience=="little" train_warm & =="2+"),n=1000000)
# predict
cpquery(mlefit, (injury=="1"), (sex=="m" & agegrp3=="60+" & yrs_experience=="little" train_warm & =="2+"),n=1000000)
# predict
cpquery(mlefit, (injury=="1"), (sex=="m" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="2+"),n=1000000)
mlefit
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data <- as.data.frame(data) # important dont know why but R is dogshiiiiiiiiit so I spend 20 min to find this
data
dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
graphviz.plot(dag)
# Using maximum likelihood.
mlefit = bn.fit(dag,data,method = "bayes")
mlefit
mlefit$E
# predict
cpquery(mlefit, (injury=="1"), (sex=="m" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="2+"),n=1000000)
# find out of sample combination
all_combinations <- expand.grid(lapply(data, levels))
missing_combinations <- anti_join(all_combinations, data, by = names(data))
missing_combinations
# predict
cpquery(mlefit, (injury=="1"), (sex=="f" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="2+"),n=1000000)
# predict
cpquery(mlefit, (injury=="1"), (sex=="f" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="1"),n=1000000)
# predict
cpquery(mlefit, (injury=="1"), (sex=="m" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="1"),n=1000000)
# predict
cpquery(mlefit, (injury=="1"), (sex=="f" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="1"),n=1000000)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
data
data$age
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
# Load Data
data <- read_csv("data/wlinj_dryad.csv")
# transform data
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
data <- data %>%
mutate(across(everything(), as.factor))
data <- as.data.frame(data) # important dont know why but R is dogshiiiiiiiiit so I spend 20 min to find this
data
dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
graphviz.plot(dag)
# Using maximum likelihood.
mlefit = bn.fit(dag,data,method = "bayes")
mlefit
mlefit$E
# find out of sample combination
all_combinations <- expand.grid(lapply(data, levels))
missing_combinations <- anti_join(all_combinations, data, by = names(data))
missing_combinations
# predict
cpquery(mlefit, (injury=="1"), (sex=="f" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="1"),n=1000000)
missing_combinations[1]
missing_combinations[:,1]
missing_combinations[1,]
# predict
cpquery(model_fit, (injury=="0"), (sex=="f" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="1"),n=1000000)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(knitr)
library(graph)
library(gRim)
library(gRain)
library(bnlearn)
library(Rgraphviz)
### Data Preprocessing
## Load Data
data <- read_csv("data/wlinj_dryad.csv")
## transform data
# aggregate yrs_experience
data <- data %>%
mutate(across(all_of(c("yrs_experience")), ~ case_when(
. <= 2 ~ "little",
TRUE ~ "much"
)))
# aggregate train_warm
data <- data %>%
mutate(across(all_of(c("train_warm")), ~ case_when(
. <= 1 ~ "1",
TRUE ~ "2+"
)))
# aggregate coached
data <- data %>%
mutate(coached = if_else(pcoach == 1 | premote == 1, 1, 0))
# aggregate injury
data <- data %>%
mutate(injury = if_else(shoulder == 1 | knees == 1 | back == 1 | hips == 1, 1, 0))
# select vars
data = data[c("sex", "agegrp3", "yrs_experience", "injury","train_warm","coached")]
# turn vars into factors
data <- data %>%
mutate(across(everything(), as.factor))
# make sure data is a dataframe
data <- as.data.frame(data) # important dont know why but R is dogshiiiiiiiiit so I spend 20 min to find this
#print data
data
dag <- model2network("[sex][agegrp3][yrs_experience|sex][train_warm|sex:yrs_experience:agegrp3][coached|sex:agegrp3][injury|train_warm:sex:coached]")
graphviz.plot(dag)
# Using maximum likelihood.
model_fit = bn.fit(dag,data,method = "bayes")
model_fit
# find out of sample combination
all_combinations <- expand.grid(lapply(data, levels))
missing_combinations <- anti_join(all_combinations, data, by = names(data))
missing_combinations[1,]
# predict
cpquery(model_fit, (injury=="0"), (sex=="f" & agegrp3=="60+" & yrs_experience=="little" & train_warm  =="1"),n=1000000)
